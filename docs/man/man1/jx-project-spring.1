.TH "JX-PROJECT\-SPRING" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
jx\-project\-spring \- Create a new Spring Boot application and import the generated code into Git and Jenkins for CI/CD


.SH SYNOPSIS
.PP
\fBjx\-project spring\fP


.SH DESCRIPTION
.PP
Creates a new Spring Boot application and then optionally setups CI/CD pipelines and GitOps promotion.

.PP
.RS

.nf
  You can see a demo of this command here: [https://jenkins\-x.io/demos/create\_spring/](https://jenkins\-x.io/demos/create\_spring/)

  For more documentation see: [https://jenkins\-x.io/developing/create\-spring/](https://jenkins\-x.io/developing/create\-spring/)

.fi
.RE

.PP
See Also:

.RS
.IP \(bu 2
jx create project : 
\[la]https://jenkins-x.io/commands/jx_create_project\[ra]

.RE


.SH OPTIONS
.PP
\fB\-x\fP, \fB\-\-advanced\fP[=false]
    Advanced mode can show more detailed forms for some resource kinds like springboot

.PP
\fB\-a\fP, \fB\-\-artifact\fP=""
    Artifact ID to generate

.PP
\fB\-b\fP, \fB\-\-batch\-mode\fP[=false]
    Runs in batch mode without prompting for user input

.PP
\fB\-\-boot\-secret\-name\fP="jx\-boot"
    The name of the boot secret

.PP
\fB\-t\fP, \fB\-\-boot\-version\fP=""
    Spring Boot version

.PP
\fB\-\-canary\fP[=false]
    should we use canary rollouts (progressive delivery) by default for this application. e.g. using a Canary deployment via flagger. Requires the installation of flagger and istio/gloo in your cluster

.PP
\fB\-d\fP, \fB\-\-dep\fP=[]
    Spring Boot dependencies

.PP
\fB\-\-deploy\-kind\fP=""
    The kind of deployment to use for the project. Should be one of knative, default

.PP
\fB\-\-dir\fP="."
    Specify the directory to import

.PP
\fB\-\-docker\-registry\-org\fP=""
    The name of the docker registry organisation to use. If not specified then the Git provider organisation will be used

.PP
\fB\-\-dry\-run\fP[=false]
    Performs local changes to the repo but skips the import into Jenkins X

.PP
\fB\-\-env\-name\fP=""
    The name of the environment to create (only used for env projects)

.PP
\fB\-\-env\-strategy\fP="Never"
    The promotion strategy of the environment to create (only used for env projects)

.PP
\fB\-\-git\-kind\fP=""
    the kind of git server to connect to

.PP
\fB\-\-git\-provider\-url\fP=""
    Deprecated: please use \-\-git\-server

.PP
\fB\-\-git\-server\fP=""
    the git server URL to create the scm client

.PP
\fB\-\-git\-token\fP=""
    the git token used to operate on the git repository. If not specified it's loaded from the git credentials file

.PP
\fB\-\-git\-username\fP=""
    the git username used to operate on the git repository. If not specified it's loaded from the git credentials file

.PP
\fB\-g\fP, \fB\-\-group\fP=""
    Group ID to generate

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for spring

.PP
\fB\-\-hpa\fP[=false]
    should we enable the Horizontal Pod Autoscaler for this application.

.PP
\fB\-\-import\-commit\-message\fP=""
    Specifies the initial commit message used when importing the project

.PP
\fB\-j\fP, \fB\-\-java\-version\fP=""
    Java version

.PP
\fB\-\-jenkins\fP=""
    The name of the Jenkins server to import the project into

.PP
\fB\-\-jenkinsfilerunner\fP=""
    if you want to import into Jenkins X with Jenkinsfilerunner this argument lets you specify the container image to use

.PP
\fB\-\-jx\fP[=false]
    if you want to default to importing this project into Jenkins X instead of a Jenkins server if you have a mixed Jenkins X and Jenkins cluster

.PP
\fB\-k\fP, \fB\-\-kind\fP=[Core,Web,Template Engines,SQL,I/O,Ops,Spring Cloud GCP,Azure,Cloud Contract,Cloud AWS,Cloud Messaging,Cloud Tracing]
    Default dependency kinds to choose from

.PP
\fB\-l\fP, \fB\-\-language\fP=""
    Language to generate

.PP
\fB\-\-log\-level\fP=""
    Sets the logging level. If not specified defaults to $JX\_LOG\_LEVEL

.PP
\fB\-\-name\fP=""
    Specify the Git repository name to import the project into (if it is not already in one)

.PP
\fB\-\-nested\-repo\fP[=false]
    Specify if using nested repositories (in gitlab)

.PP
\fB\-\-no\-collaborator\fP[=false]
    disables checking if the bot user is a collaborator. Only used if you have an issue with your git provider and this functionality in go\-scm

.PP
\fB\-\-no\-dev\-pr\fP[=false]
    disables generating a Pull Request on the cluster git repository

.PP
\fB\-\-no\-import\fP[=false]
    Disable import after the creation

.PP
\fB\-\-no\-pack\fP[=false]
    Disable trying to default a Dockerfile and Helm Chart from the pipeline catalog pack

.PP
\fB\-\-no\-start\fP[=false]
    disables starting a release pipeline when importing/creating a new project

.PP
\fB\-\-operator\-namespace\fP="jx\-git\-operator"
    The namespace where the git operator is installed

.PP
\fB\-\-org\fP=""
    Specify the Git provider organisation to import the project into (if it is not already in one)

.PP
\fB\-o\fP, \fB\-\-output\-dir\fP=""
    Directory to output the project to. Defaults to the current directory

.PP
\fB\-\-pack\fP=""
    The name of the pipeline catalog pack to use. If none is specified it will be chosen based on matching the source code languages

.PP
\fB\-p\fP, \fB\-\-packaging\fP=""
    Packaging

.PP
\fB\-\-pipeline\-catalog\-dir\fP=""
    The pipeline catalog directory you want to use instead of the buildPackGitURL in the dev Environment Team settings. Generally only used for testing pipelines

.PP
\fB\-\-pr\-poll\-period\fP=20s
    the time between polls of the Pull Request on the cluster environment git repository

.PP
\fB\-\-pr\-poll\-timeout\fP=20m0s
    the maximum amount of time we wait for the Pull Request on the cluster environment git repository

.PP
\fB\-\-scheduler\fP="in\-repo"
    Change schedulerName, More info in 
\[la]https://jenkins-x.io/v3/develop/faq/config/repos/#how-do-i-customise-a-scheduler\[ra]

.PP
\fB\-\-service\-account\fP="tekton\-bot"
    The Kubernetes ServiceAccount to use to run the initial pipeline

.PP
\fB\-\-type\fP=""
    Project Type (such as maven\-project or gradle\-project)

.PP
\fB\-\-use\-default\-git\fP[=false]
    use default git account

.PP
\fB\-\-verbose\fP[=false]
    Enables verbose output. The environment variable JX\_LOG\_LEVEL has precedence over this flag and allows setting the logging level to any value of: panic, fatal, error, warn, info, debug, trace

.PP
\fB\-\-wait\-for\-pr\fP[=true]
    waits for the Pull Request generated on the cluster environment git repository to merge


.SH EXAMPLE
.PP
# Create a Spring Boot application where you use the terminal to pick the values
  jx\-project spring

.PP
# Creates a Spring Boot application passing in the required dependencies
  jx\-project spring \-d web \-d actuator

.PP
# To pick the advanced options (such as what package type maven\-project/gradle\-project) etc then use
  jx\-project spring \-x

.PP
#Â To create a gradle project use:
  jx\-project spring \-\-type gradle\-project


.SH SEE ALSO
.PP
\fBjx\-project(1)\fP


.SH HISTORY
.PP
Auto generated by spf13/cobra
